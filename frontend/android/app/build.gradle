apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

/**
 * React Native 0.80.2 Configuration
 * Optimized for both debug and release builds
 */
project.ext.react = [
    enableHermes: true,
    codegenEnabled: false,
    bundleInDebug: false,  // Don't bundle in debug mode
    bundleInRelease: true  // Bundle in release mode
]

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

// Professional bundle task for React Native 0.80+
def bundleTaskName = "bundleJsAndAssets"
def bundleFile = file("$buildDir/intermediates/assets/release/index.android.bundle")
def assetsDir = file("$buildDir/intermediates/assets/release")

task bundleJsAndAssets(type: Exec) {
    workingDir "$rootDir/.."
    commandLine "npx", "react-native", "bundle", "--platform", "android", "--dev", "false", "--entry-file", "index.js", "--bundle-output", bundleFile, "--assets-dest", assetsDir
}

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.frontend"
    defaultConfig {
        applicationId "com.frontend"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        
        // OAuth redirect scheme for react-native-app-auth
        manifestPlaceholders = [
            appAuthRedirectScheme: "binyan"
        ]
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            debuggable false
        }
    }
    
    // Professional asset handling - only for release builds
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.mergeAssetsProvider.configure {
                dependsOn bundleTaskName
            }
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// React Native 0.80+ autolinking handles vector icons automatically
// No manual configuration needed

apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
