apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: 'com.google.gms.google-services'
apply from: project(':react-native-config').projectDir.getPath() + "/dotenv.gradle"

/**
 * React Native 0.80.2 Configuration
 * Optimized for both debug and release builds
 */
project.ext.react = [
    enableHermes: true,
    codegenEnabled: false,
    bundleInDebug: false,  // Don't bundle in debug mode
    bundleInRelease: true  // Bundle in release mode
]

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

// Professional bundle task for React Native 0.80+
def bundleTaskName = "bundleJsAndAssets"
def bundleFile = file("$buildDir/intermediates/assets/release/index.android.bundle")
def assetsDir = file("$buildDir/intermediates/assets/release")

task bundleJsAndAssets(type: Exec) {
    workingDir "$rootDir/.."
    commandLine "npx", "react-native", "bundle", "--platform", "android", "--dev", "false", "--entry-file", "index.js", "--bundle-output", bundleFile, "--assets-dest", assetsDir
}

android {
    // Disable NDK/CMake for faster development builds
    // ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.binyan"
    
    buildFeatures {
        buildConfig = true
    }
    defaultConfig {
        applicationId "com.binyan"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        
        // OAuth redirect scheme for react-native-app-auth
        manifestPlaceholders = [
            appAuthRedirectScheme: "binyan"
        ]
        
        // Disable NDK for faster development builds
        // ndk {
        //     abiFilters 'arm64-v8a'
        // }
    }
    
    // Disable ABI splits for faster development builds
    splits {
        abi {
            enable false
        }
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            debuggable false
        }
    }
    
    // Professional asset handling - only for release builds
    applicationVariants.all { variant ->
        if (variant.buildType.name == "release") {
            variant.mergeAssetsProvider.configure {
                dependsOn bundleTaskName
            }
        }
    }
}

// Professional dependency conflict resolution
configurations.all {
    resolutionStrategy {
        // Use compatible AndroidX versions that actually exist
        force 'androidx.core:core:1.12.0'
        force 'androidx.core:core-ktx:1.12.0'
        force 'androidx.appcompat:appcompat:1.6.1'
        force 'androidx.fragment:fragment:1.6.2'
        force 'androidx.annotation:annotation:1.7.1'
        
        // Handle dependency conflicts
        eachDependency { details ->
            if (details.requested.group == 'androidx.core') {
                details.useVersion '1.12.0'
            }
        }
    }
}

dependencies {
    implementation("com.facebook.react:react-android")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
    
    // Firebase dependencies
    implementation platform('com.google.firebase:firebase-bom:33.7.0')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
}

// React Native 0.80+ autolinking handles vector icons automatically
// No manual configuration needed - removed to fix CMake conflicts

// Vector Icons configuration for React Native 0.80+
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
// fURY_cZwSF602CgpvIpnty:APA91bGnBMHD2BBsgt_aSDQA8XBjiIrGfmm260hpqxpASwUl2I55Zn1Xg0j_zRuvKBgEq06Bw8p3DG9u70u2VGWI0n826WsRW0lI61ERc9OaOyjxSAJyyo0